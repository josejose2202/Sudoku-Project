import pygame
from constant import *

class Cell:
    def __init__(self, value, row, col, screen):
        self.value = value
        self.row = row
        self.col = col
        self.screen = screen
        self.selected = False

    def set_cell_value(self, value):
        self.value = value

    def set_sketched_value(self,value):
        self.value = value

    def draw(self):
        chip_font = pygame.font.Font(None, NUM_FONT)
        chip_1_surf = chip_font.render('1', 0, COLOR)
        chip_2_surf = chip_font.render('2', 0, COLOR)
        chip_3_surf = chip_font.render('3', 0, COLOR)
        chip_4_surf = chip_font.render('4', 0, COLOR)
        chip_5_surf = chip_font.render('5', 0, COLOR)
        chip_6_surf = chip_font.render('6', 0, COLOR)
        chip_7_surf = chip_font.render('7', 0, COLOR)
        chip_8_surf = chip_font.render('8', 0, COLOR)
        chip_9_surf = chip_font.render('9', 0, COLOR)
        if self.selected:
            pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(self.col *
                                                              SQUARE_SIZE, self.row * SQUARE_SIZE, SQUARE_SIZE,
                                                              SQUARE_SIZE), 12)
            self.selected = False


        if self.value == '1':
            chip_1_rect = chip_1_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_1_surf, chip_1_rect)
        elif self.value == '2':
            chip_2_rect = chip_2_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_2_surf, chip_2_rect)
        elif self.value == '3':
            chip_3_rect = chip_3_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_3_surf, chip_3_rect)
        elif self.value == '4':
            chip_4_rect = chip_4_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_4_surf, chip_4_rect)
        elif self.value == '5':
            chip_5_rect = chip_5_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_5_surf, chip_5_rect)
        elif self.value == '6':
            chip_6_rect = chip_6_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_6_surf, chip_6_rect)
        elif self.value == '7':
            chip_7_rect = chip_7_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_7_surf, chip_7_rect)
        elif self.value == '8':
            chip_8_rect = chip_8_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_8_surf, chip_8_rect)
        elif self.value == '9':
            chip_9_rect = chip_9_surf.get_rect(
                center=(SQUARE_SIZE * self.col + SQUARE_SIZE // 2, SQUARE_SIZE *
                        self.row + SQUARE_SIZE // 2))
            self.screen.blit(chip_9_surf, chip_9_rect)
